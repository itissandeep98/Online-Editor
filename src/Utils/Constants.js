export const Judge0Token = '798ff74bcdmsh7c641014453b3ccp1f5b5ejsn071aabbda23d';

export const TemplateCode = {
	cpp: `#include <bits/stdc++.h>\nusing namespace std;\n\n/*\n * Complete the 'Solution' function below.\n *\n */\n\nvoid Solution(string n) {\n\n}\n\nint main()\n{\n    ofstream fout(getenv("OUTPUT_PATH"));\n    string n;\n\n    getline(cin, n);\n    Solution(n);\n\n    fout.close();\n    return 0;\n}\n`,
	java: `import java.io.*;\r\nimport java.math.*;\r\nimport java.security.*;\r\nimport java.text.*;\r\nimport java.util.*;\r\nimport java.util.concurrent.*;\r\nimport java.util.function.*;\r\nimport java.util.regex.*;\r\nimport java.util.stream.*;\r\n\r\nclass Result {\r\n    /*\r\n     * Complete the 'Solution' function below.\r\n     *\r\n     */\r\n\r\n    public static void Solution(String n) {\r\n    // Write your code here\r\n\r\n    }\r\n}\r\n\r\npublic class Solution {\r\n    public static void main(String[] args) throws IOException {\r\n        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\r\n        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));\r\n\r\n        String n = bufferedReader.readLine().trim();\r\n\r\n        Result.Solution(n);\r\n\r\n        bufferedReader.close();\r\n        bufferedWriter.close();\r\n    }\r\n}\r\n`,
	python:
		"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the Solution function below.\ndef Solution(n):\n\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = input()\n\n    result = Solution(c, k)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n",
	javascript: `'use strict';\n\nconst fs = require('fs');\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', inputStdin => {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', _ => {\n    inputString = inputString.replace(/\\s*$/, '')\n        .split('\\n')\n        .map(str => str.replace(/\\s*$/, ''));\n\n    main();\n});\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\n// Complete the Solution function below.\nfunction Solution(n) {\n\n\n}\n\nfunction main() {\n    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n    const n = readLine();\n\n    let result = Solution(n);\n\n    ws.write(result + "\\n");\n\n    ws.end();\n}\n`,
};
